- id: fake_presence
  alias: fake_presence
  description: Fake Home Presence
  mode: parallel
  trigger:
    - id: "trigger"
      platform: time_pattern
      minutes: "/5"
    - platform: state
      entity_id: sensor.weather_time_off_day
  condition:
    - condition: state
      entity_id: "binary_sensor.anyone_home"
      state: "off"
    - condition: template
      value_template: "{{ (range(0, 2) | random) == 1 }}"
    :
    - choose:
        - conditions:
            - condition: state
              entity_id: sensor.weather_time_off_day
              state: day
              for:
                hours: 1
          sequence: # Day Sequence
            - choose: # - Open windows
                conditions: "{{ ( as_timestamp(now()) - as_timestamp(state_attr('script.windows_day_mode', 'last_triggered')) |int(0) ) > 72000 }}"
                sequence:
                  - service: script.windows_day_mode
        - conditions:
            - condition: state
              entity_id: sensor.weather_time_off_day
              state: night
          sequence: # Night Sequence
            - choose:
                - conditions:
                    - condition: time
                      after: "01:00:00"
                      before: "09:00:00"
                  sequence:
                    - service: homeassistant.turn_off
                      target:
                        entity_id: group.home_all
              default:
                - service: homeassistant.toggle # - Random Entities
                  target:
                    entity_id: >
                      {# CONFIGURATION START #}
                      {%- set dummy_entity = 'light.virtual_test_light2' -%} {# We need a dummy entitie to call if nothis matches #}
                      {%- set mintime = 600 -%} {# Minimum time in seconts for a action to hold #}
                      {%- set mintimeon = 1000 -%} {# Minimum time in seconds for a entitie to stay on #}
                      {%- set maxtimeon = 1500 -%} {# Maximum time in seconds for a entitie to stay on #}
                      {%- set min_on = 1 -%} {# Minimum numeber of entities to have on (-1 to disable) #}
                      {%- set max_on = 4 -%} {# Maximum numeber of entities to have on (-1 to disable) #}

                      {# Entities to manipulate #}
                      {%- set target=[
                              'light.livingroom_spotlight',
                              'light.hallway_spotlight',
                              'light.hallway_tablelight',
                              'light.livingroom_sofalight',
                              'light.livingroom_tvlight',
                              'light.balcony_light'
                        ]
                      -%}
                      {# CONFIGURATION END #}

                      {%- set result = namespace(action=[],target=[],on=[],off=[],oldest_e="",oldest_t=0) -%}

                      {%- set result.target = target -%}

                      {# Gets Expired etities #}
                      {%- for t in target -%}
                        {%- set time = ( as_timestamp(now()) - as_timestamp(states[t.split('.')[0]][t.split('.')[1]].last_changed) ) -%}

                        {%- if is_state(t,'on') -%}
                          {%- set result.on = result.on + [t] -%}
                        {%- elif is_state(t,'off') -%}
                          {%- set result.off = result.off + [t] -%}
                        {%- endif -%}

                        {%- if is_state(t,'unavailable') -%}
                          {%- set result.target = result.target|reject('search',t) | list -%}
                        {%- elif is_state(t,'on') and time > maxtimeon -%}
                          {# Entitie is on for a long time, should be turn off #}
                          {%- set result.action = result.action + [t] -%}
                        {% elif is_state(t,'on') and time < mintimeon -%}
                          {# Entitie is on for small time, should be ignored #}
                          {%- set result.target = result.target|reject('search',t) | list -%}
                        {%- endif -%}

                        {% if time < mintime -%}
                          {# Removes entitie that changed state recently #}
                          {%- set result.target = result.target|reject('search',t) | list -%}
                        {% endif %}
                      {%- endfor -%}

                      {%- if min_on >= 0 and result.on|length <= min_on -%}
                        {# We need to turn on somting #}
                        {%- set result.target = result.off -%}
                      {%- elif max_on >= 0 and result.on|length >= max_on -%}
                        {# We need to turn off somting #}
                        {%- set result.target = result.on -%}
                      {%- endif -%}

                      {# Removes Entities on action from targets #}
                      {%- for t in result.action -%}
                        {%- set result.target = result.target|reject('search',t) | list -%}
                      {%- endfor -%}

                      {# Adds entities to actions #}
                      {%- if result.target|length > 0 -%}
                        {# Returns a random entitie from the available ones #}
                        {%- set result.action = result.action + [result.target|random] -%}
                      {%- endif -%}

                      {%- if result.action|length == 0 -%}
                        {%- set result.action = result.action + [dummy_entity] -%}
                      {%- endif -%}

                      {{result.action}}
